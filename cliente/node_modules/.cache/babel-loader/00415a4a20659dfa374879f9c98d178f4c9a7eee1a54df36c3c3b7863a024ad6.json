{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Blackmen\\\\Desktop\\\\RICK AND MORTY\\\\cliente\\\\src\\\\Componentes\\\\Cards\\\\Cards.jsx\",\n  _s = $RefreshSig$();\n// import { useState } from 'react';\nimport { useSelector } from \"react-redux\";\nimport Card from \"../Card/Card\";\nimport \"./Estilos/Cards.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Cards() {\n  _s();\n  const personaje = useSelector(state => state.personajes);\n  // const [indice, setIndice] = useState(0);\n  // const [renderizado, setRenderizado] = useState(0);\n\n  // if(personaje.length <= 12) {\n  //     setIndice(0)\n  //     setRenderizado(personaje.length)}\n\n  // const sumar = ()=>{\n  //     setIndice(indice + 12)\n  //     setRenderizado(renderizado + 12)\n  // }\n\n  // const restar = ()=>{\n  //     setIndice(indice - 12)\n  //     setRenderizado(renderizado - 12)\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Cards\",\n      children: personaje.map(({\n        id,\n        nombre,\n        estado,\n        especie,\n        origen,\n        imagen,\n        genero\n      }, index) => {\n        const uniqueKey = `${id}_${index}`;\n        return /*#__PURE__*/_jsxDEV(Card, {\n          id: id,\n          nombre: nombre,\n          estado: estado,\n          especie: especie,\n          origen: origen,\n          imagen: imagen,\n          genero: genero\n        }, uniqueKey, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"paginado\",\n      children: [personaje.length > 12 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"menor\",\n        children: \" < \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 38\n      }, this), personaje.length > 12 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mayor\",\n        children: \" > \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(Cards, \"AHxWOuW/s6NRoYWSOUDDB/wbnI0=\", false, function () {\n  return [useSelector];\n});\n_c = Cards;\nexport default Cards;\n\n// {personaje.map(({id,nombre,estado,especie,origen,imagen,genero},index)=>{\n//     const uniqueKey = `${id}_${index}`;\n//     return <Card \n//     id={id}\n//     key={uniqueKey}\n//     nombre={nombre} \n//     estado={estado} \n//     especie={especie} \n//     origen={origen} \n//     imagen={imagen}\n//     genero={genero}/>\n// })}\n\n// for (let i = 0; i < global; i++) {\n//     const uniqueKey = `${personaje[0][\"id\"]}_${i}`;\n//     return <Card \n//     id={personaje[i][\"id\"]}\n//     key={uniqueKey}\n//     nombre={personaje[i][\"nombre\"]} \n//     estado={personaje[i][\"estado\"]} \n//     especie={personaje[i][\"especie\"]} \n//     origen={personaje[i][\"origen\"]} \n//     imagen={personaje[i][\"imagen\"]}\n//     genero={personaje[i][\"genero\"]}/>\n\n// }\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["useSelector","Card","jsxDEV","_jsxDEV","Cards","_s","personaje","state","personajes","children","className","map","id","nombre","estado","especie","origen","imagen","genero","index","uniqueKey","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["C:/Users/Blackmen/Desktop/RICK AND MORTY/cliente/src/Componentes/Cards/Cards.jsx"],"sourcesContent":["// import { useState } from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport Card from \"../Card/Card\";\r\nimport \"./Estilos/Cards.css\"\r\n\r\nfunction Cards(){\r\n    const personaje = useSelector((state) => state.personajes);\r\n    // const [indice, setIndice] = useState(0);\r\n    // const [renderizado, setRenderizado] = useState(0);\r\n\r\n    // if(personaje.length <= 12) {\r\n    //     setIndice(0)\r\n    //     setRenderizado(personaje.length)}\r\n\r\n    // const sumar = ()=>{\r\n    //     setIndice(indice + 12)\r\n    //     setRenderizado(renderizado + 12)\r\n    // }\r\n\r\n    // const restar = ()=>{\r\n    //     setIndice(indice - 12)\r\n    //     setRenderizado(renderizado - 12)\r\n    // }\r\n\r\nreturn(\r\n    <div>\r\n        <div className=\"Cards\">\r\n            {personaje.map(({id,nombre,estado,especie,origen,imagen,genero},index)=>{\r\n                const uniqueKey = `${id}_${index}`;\r\n                return <Card \r\n                id={id}\r\n                key={uniqueKey}\r\n                nombre={nombre} \r\n                estado={estado} \r\n                especie={especie} \r\n                origen={origen} \r\n                imagen={imagen}\r\n                genero={genero}/>\r\n            })}\r\n        </div>\r\n        <div className=\"paginado\">\r\n            {personaje.length >12 && <button className=\"menor\" > &lt; </button>}\r\n            {personaje.length > 12 && <button className=\"mayor\" > &gt; </button>}\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Cards;\r\n\r\n\r\n// {personaje.map(({id,nombre,estado,especie,origen,imagen,genero},index)=>{\r\n//     const uniqueKey = `${id}_${index}`;\r\n//     return <Card \r\n//     id={id}\r\n//     key={uniqueKey}\r\n//     nombre={nombre} \r\n//     estado={estado} \r\n//     especie={especie} \r\n//     origen={origen} \r\n//     imagen={imagen}\r\n//     genero={genero}/>\r\n// })}\r\n\r\n\r\n// for (let i = 0; i < global; i++) {\r\n//     const uniqueKey = `${personaje[0][\"id\"]}_${i}`;\r\n//     return <Card \r\n//     id={personaje[i][\"id\"]}\r\n//     key={uniqueKey}\r\n//     nombre={personaje[i][\"nombre\"]} \r\n//     estado={personaje[i][\"estado\"]} \r\n//     especie={personaje[i][\"especie\"]} \r\n//     origen={personaje[i][\"origen\"]} \r\n//     imagen={personaje[i][\"imagen\"]}\r\n//     genero={personaje[i][\"genero\"]}/>\r\n    \r\n// }\r\n\r\n\r\n"],"mappings":";;AAAA;AACA,SAASA,WAAW,QAAQ,aAAa;AACzC,OAAOC,IAAI,MAAM,cAAc;AAC/B,OAAO,qBAAqB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5B,SAASC,KAAKA,CAAA,EAAE;EAAAC,EAAA;EACZ,MAAMC,SAAS,GAAGN,WAAW,CAAEO,KAAK,IAAKA,KAAK,CAACC,UAAU,CAAC;EAC1D;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEJ,oBACIL,OAAA;IAAAM,QAAA,gBACIN,OAAA;MAAKO,SAAS,EAAC,OAAO;MAAAD,QAAA,EACjBH,SAAS,CAACK,GAAG,CAAC,CAAC;QAACC,EAAE;QAACC,MAAM;QAACC,MAAM;QAACC,OAAO;QAACC,MAAM;QAACC,MAAM;QAACC;MAAM,CAAC,EAACC,KAAK,KAAG;QACpE,MAAMC,SAAS,GAAI,GAAER,EAAG,IAAGO,KAAM,EAAC;QAClC,oBAAOhB,OAAA,CAACF,IAAI;UACZW,EAAE,EAAEA,EAAG;UAEPC,MAAM,EAAEA,MAAO;UACfC,MAAM,EAAEA,MAAO;UACfC,OAAO,EAAEA,OAAQ;UACjBC,MAAM,EAAEA,MAAO;UACfC,MAAM,EAAEA,MAAO;UACfC,MAAM,EAAEA;QAAO,GANVE,SAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAME,CAAC;MACrB,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eACNrB,OAAA;MAAKO,SAAS,EAAC,UAAU;MAAAD,QAAA,GACpBH,SAAS,CAACmB,MAAM,GAAE,EAAE,iBAAItB,OAAA;QAAQO,SAAS,EAAC,OAAO;QAAAD,QAAA,EAAE;MAAM;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EAClElB,SAAS,CAACmB,MAAM,GAAG,EAAE,iBAAItB,OAAA;QAAQO,SAAS,EAAC,OAAO;QAAAD,QAAA,EAAE;MAAM;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACnB,EAAA,CAzCQD,KAAK;EAAA,QACQJ,WAAW;AAAA;AAAA0B,EAAA,GADxBtB,KAAK;AA4Cd,eAAeA,KAAK;;AAGpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}