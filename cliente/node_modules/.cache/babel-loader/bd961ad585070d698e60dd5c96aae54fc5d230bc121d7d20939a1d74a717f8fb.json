{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Blackmen\\\\Desktop\\\\RICK AND MORTY\\\\cliente\\\\src\\\\Componentes\\\\Cards\\\\Cards.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport Card from '../Card/Card';\nimport './Estilos/Cards.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Cards() {\n  _s();\n  const personajes = useSelector(state => state.personajes);\n  const [indice, setIndice] = useState(0);\n  const [renderizado, setRenderizado] = useState(12);\n  const sumar = () => {\n    const newIndex = indice + 12;\n    const newRenderizado = Math.min(renderizado + 12, personajes.length);\n    setIndice(newIndex);\n    setRenderizado(newRenderizado);\n  };\n  const restar = () => {\n    const newIndex = Math.max(indice - 12, 0);\n    const newRenderizado = Math.min(newIndex + 12, personajes.length);\n    setIndice(newIndex);\n    setRenderizado(newRenderizado);\n  };\n  useEffect(() => {\n    if (renderizado < personajes.length) {\n      setRenderizado(renderizado + 1);\n    }\n  }, [personajes]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Cards\",\n      children: personajes.slice(indice, renderizado).map(({\n        id,\n        nombre,\n        estado,\n        especie,\n        origen,\n        imagen,\n        genero\n      }, index) => {\n        const uniqueKey = `${id}_${index}`;\n        return /*#__PURE__*/_jsxDEV(Card, {\n          id: id,\n          nombre: nombre,\n          estado: estado,\n          especie: especie,\n          origen: origen,\n          imagen: imagen,\n          genero: genero\n        }, uniqueKey, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"paginado\",\n      children: [indice !== 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"menor\",\n        onClick: restar,\n        children: \" < \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 26\n      }, this), renderizado <= personajes.length && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mayor\",\n        onClick: sumar,\n        children: \" > \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 46\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(Cards, \"O/p0H28aWbboalM/pQz8B8ZeYp8=\", false, function () {\n  return [useSelector];\n});\n_c = Cards;\nexport default Cards;\n\n// {personaje.map(({id,nombre,estado,especie,origen,imagen,genero},index)=>{\n//     const uniqueKey = `${id}_${index}`;\n//     return <Card \n//     id={id}\n//     key={uniqueKey}\n//     nombre={nombre} \n//     estado={estado} \n//     especie={especie} \n//     origen={origen} \n//     imagen={imagen}\n//     genero={genero}/>\n// })}\n\n// for (let i = 0; i < global; i++) {\n//     const uniqueKey = `${personaje[0][\"id\"]}_${i}`;\n//     return <Card \n//     id={personaje[i][\"id\"]}\n//     key={uniqueKey}\n//     nombre={personaje[i][\"nombre\"]} \n//     estado={personaje[i][\"estado\"]} \n//     especie={personaje[i][\"especie\"]} \n//     origen={personaje[i][\"origen\"]} \n//     imagen={personaje[i][\"imagen\"]}\n//     genero={personaje[i][\"genero\"]}/>\n\n// }\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["useState","useEffect","useSelector","Card","jsxDEV","_jsxDEV","Cards","_s","personajes","state","indice","setIndice","renderizado","setRenderizado","sumar","newIndex","newRenderizado","Math","min","length","restar","max","children","className","slice","map","id","nombre","estado","especie","origen","imagen","genero","index","uniqueKey","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Blackmen/Desktop/RICK AND MORTY/cliente/src/Componentes/Cards/Cards.jsx"],"sourcesContent":["import { useState, useEffect} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Card from '../Card/Card';\r\nimport './Estilos/Cards.css';\r\n\r\nfunction Cards() {\r\n  const personajes = useSelector((state) => state.personajes);\r\n  const [indice, setIndice] = useState(0);\r\n  const [renderizado, setRenderizado] = useState(12);\r\n\r\n  const sumar = () => {\r\n    const newIndex = indice + 12;\r\n    const newRenderizado = Math.min(renderizado + 12, personajes.length);\r\n    setIndice(newIndex);\r\n    setRenderizado(newRenderizado);\r\n  };\r\n\r\n  const restar = () => {\r\n    const newIndex = Math.max(indice - 12, 0);\r\n    const newRenderizado = Math.min(newIndex + 12, personajes.length);\r\n    setIndice(newIndex);\r\n    setRenderizado(newRenderizado);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(renderizado < personajes.length){\r\n      setRenderizado(renderizado + 1)\r\n    }\r\n  }, [personajes]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"Cards\">\r\n        {personajes.slice(indice, renderizado).map(({ id, nombre, estado, especie, origen, imagen, genero }, index) => {\r\n          const uniqueKey = `${id}_${index}`;\r\n          return (\r\n            <Card\r\n              id={id}\r\n              key={uniqueKey}\r\n              nombre={nombre}\r\n              estado={estado}\r\n              especie={especie}\r\n              origen={origen}\r\n              imagen={imagen}\r\n              genero={genero}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n      <div className=\"paginado\">\r\n        {indice !== 0 && <button className=\"menor\" onClick={restar}> &lt; </button>}\r\n        {renderizado <= personajes.length && <button className=\"mayor\" onClick={sumar}> &gt; </button>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cards;\r\n\r\n\r\n\r\n\r\n// {personaje.map(({id,nombre,estado,especie,origen,imagen,genero},index)=>{\r\n//     const uniqueKey = `${id}_${index}`;\r\n//     return <Card \r\n//     id={id}\r\n//     key={uniqueKey}\r\n//     nombre={nombre} \r\n//     estado={estado} \r\n//     especie={especie} \r\n//     origen={origen} \r\n//     imagen={imagen}\r\n//     genero={genero}/>\r\n// })}\r\n\r\n\r\n// for (let i = 0; i < global; i++) {\r\n//     const uniqueKey = `${personaje[0][\"id\"]}_${i}`;\r\n//     return <Card \r\n//     id={personaje[i][\"id\"]}\r\n//     key={uniqueKey}\r\n//     nombre={personaje[i][\"nombre\"]} \r\n//     estado={personaje[i][\"estado\"]} \r\n//     especie={personaje[i][\"especie\"]} \r\n//     origen={personaje[i][\"origen\"]} \r\n//     imagen={personaje[i][\"imagen\"]}\r\n//     genero={personaje[i][\"genero\"]}/>\r\n    \r\n// }\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}