{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Blackmen\\\\Desktop\\\\RICK AND MORTY\\\\cliente\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState, useEffect } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport General from \"./Estilos/General.css\";\nimport Cards from \"./Componentes/Cards/Cards\";\nimport Navegador from \"./Componentes/Navegador/Navegador\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [personajes, setPersonajes] = useState([{\n    especie: \"Human\",\n    estado: \"Alive\",\n    genero: \"Male\",\n    id: 1,\n    imagen: \"https://rickandmortyapi.com/api/character/avatar/1.jpeg\",\n    nombre: \"Rick Sanchez\",\n    origen: \"Earth (C-137)\"\n  }]);\n  useEffect(() => {\n    console.log('El estado de personajes se actualizó:', personajes);\n  }, [personajes]);\n  async function verificador(id) {\n    try {\n      const analisis = personajes.find(personaje => personaje.id === id);\n      if (!analisis) {\n        const response = await axios(`https://rickandmortyapi.com/api/character/${id}`);\n        const data = response.data;\n        // Verificar nuevamente después de la respuesta de la API\n        const existente = personajes.find(personaje => personaje.id === id);\n        if (!existente) {\n          setPersonajes(prevPersonajes => [...prevPersonajes, {\n            id: data.id,\n            nombre: data.name,\n            estado: data.status,\n            especie: data.species,\n            genero: data.gender,\n            origen: data.origin.name,\n            imagen: data.image\n          }]);\n        } else {\n          window.alert('¡Ya existe el personaje!');\n        }\n      } else {\n        window.alert('¡Ya existe el personaje!');\n      }\n    } catch (error) {\n      window.alert('¡No hay personajes con este ID!');\n    }\n  }\n  function eliminar(id) {\n    const nuevoPersonaje = personajes.filter(personaje => personaje.id !== id);\n    setPersonajes(nuevoPersonaje);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Fondo\",\n    children: [/*#__PURE__*/_jsxDEV(Navegador, {\n      verificador: verificador\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Cards, {\n          personajes: personajes,\n          eliminar: eliminar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"iD4BTWIJccb+anET7NwfUmC+DOw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["axios","useState","useEffect","Route","Routes","General","Cards","Navegador","jsxDEV","_jsxDEV","App","_s","personajes","setPersonajes","especie","estado","genero","id","imagen","nombre","origen","console","log","verificador","analisis","find","personaje","response","data","existente","prevPersonajes","name","status","species","gender","origin","image","window","alert","error","eliminar","nuevoPersonaje","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["C:/Users/Blackmen/Desktop/RICK AND MORTY/cliente/src/App.js"],"sourcesContent":["import axios from \"axios\";\nimport { useState, useEffect } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport General from \"./Estilos/General.css\";\nimport Cards from \"./Componentes/Cards/Cards\";\nimport Navegador from \"./Componentes/Navegador/Navegador\";\n\nfunction App() {\n  const [personajes, setPersonajes] = useState([{\n    especie: \"Human\",\n    estado: \"Alive\",\n    genero: \"Male\",\n    id: 1,\n    imagen: \"https://rickandmortyapi.com/api/character/avatar/1.jpeg\",\n    nombre: \"Rick Sanchez\",\n    origen: \"Earth (C-137)\",\n  }]);\n\n  useEffect(() => {\n    console.log('El estado de personajes se actualizó:', personajes);\n  }, [personajes]);\n\n  async function verificador(id) {\n    try {\n      const analisis = personajes.find((personaje) => personaje.id === id);\n      if (!analisis) {\n        const response = await axios(`https://rickandmortyapi.com/api/character/${id}`);\n        const data = response.data;\n        // Verificar nuevamente después de la respuesta de la API\n        const existente = personajes.find((personaje) => personaje.id === id);\n        if (!existente) {\n          setPersonajes((prevPersonajes) => [\n            ...prevPersonajes,\n            {\n              id: data.id,\n              nombre: data.name,\n              estado: data.status,\n              especie: data.species,\n              genero: data.gender,\n              origen: data.origin.name,\n              imagen: data.image,\n            },\n          ]);\n        } else {\n          window.alert('¡Ya existe el personaje!');\n        }\n      } else {\n        window.alert('¡Ya existe el personaje!');\n      }\n    } catch (error) {\n      window.alert('¡No hay personajes con este ID!');\n    }\n  }\n\n  function eliminar(id) {\n    const nuevoPersonaje = personajes.filter((personaje) => personaje.id !== id);\n    setPersonajes(nuevoPersonaje);\n  }\n\n  return (\n    <div className=\"Fondo\">\n      <Navegador verificador={verificador} />\n      <Routes>\n        <Route path=\"/\" element={<Cards personajes={personajes} eliminar={eliminar} />} />\n      </Routes>\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}