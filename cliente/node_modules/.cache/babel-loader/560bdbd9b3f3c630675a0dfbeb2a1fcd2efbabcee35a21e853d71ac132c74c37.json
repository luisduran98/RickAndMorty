{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Blackmen\\\\Desktop\\\\RICK AND MORTY\\\\cliente\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useState, useEffect } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport General from \"./Estilos/General.css\";\nimport Cards from \"./Componentes/Cards/Cards\";\nimport Navegador from \"./Componentes/Navegador/Navegador\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [personajes, setPersonajes] = useState([]);\n  let contador = 0;\n  useEffect(() => {\n    // Aquí puedes realizar acciones después de que se actualice personajes\n    console.log('El estado de personajes se actualizó:', personajes);\n  }, [personajes]);\n  async function buscador(id) {\n    try {\n      const {\n        data\n      } = await axios(`https://rickandmortyapi.com/api/character/${id}`);\n      const personajesRepetidos = personajes.find(personaje => personaje.id === id);\n      if (personajesRepetidos) {\n        return window.alert('¡Ya agregaste este Personaje!');\n      }\n      setPersonajes(prevPersonajes => [...prevPersonajes, {\n        id: data.id,\n        nombre: data.name,\n        estado: data.status,\n        especie: data.species,\n        genero: data.gender,\n        origen: data.origin.name,\n        imagen: data.image\n      }]);\n    } catch (error) {\n      window.alert('¡No hay personajes con este ID!');\n    }\n  }\n  function eliminar(id) {\n    const nuevoPersonaje = personajes.filter(personaje => personaje.id !== id);\n    setPersonajes(nuevoPersonaje);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Fondo\",\n    children: [/*#__PURE__*/_jsxDEV(Navegador, {\n      buscador: buscador\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Cards, {\n          personajes: personajes,\n          eliminar: eliminar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"dAYO1lkwf+hib8T8baiVUeO+u6A=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["axios","useState","useEffect","Route","Routes","General","Cards","Navegador","jsxDEV","_jsxDEV","App","_s","personajes","setPersonajes","contador","console","log","buscador","id","data","personajesRepetidos","find","personaje","window","alert","prevPersonajes","nombre","name","estado","status","especie","species","genero","gender","origen","origin","imagen","image","error","eliminar","nuevoPersonaje","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","_c","$RefreshReg$"],"sources":["C:/Users/Blackmen/Desktop/RICK AND MORTY/cliente/src/App.js"],"sourcesContent":["import axios from \"axios\";\nimport { useState, useEffect} from 'react';\nimport { Route, Routes} from 'react-router-dom';\nimport General from \"./Estilos/General.css\"\nimport Cards from \"./Componentes/Cards/Cards\";\nimport Navegador from \"./Componentes/Navegador/Navegador\";\n\n\n\nfunction App() {\n\n  const [personajes, setPersonajes] = useState([]);\n  let contador = 0;\n\n  useEffect(() => {\n    // Aquí puedes realizar acciones después de que se actualice personajes\n    console.log('El estado de personajes se actualizó:', personajes);\n  }, [personajes]);\n\n  async function buscador(id) {\n    try {\n      const { data } = await axios(`https://rickandmortyapi.com/api/character/${id}`);\n      \n      const personajesRepetidos = personajes.find((personaje) => personaje.id === id);\n      \n\n      if (personajesRepetidos) {\n        return window.alert('¡Ya agregaste este Personaje!');\n      }\n\n        setPersonajes((prevPersonajes) => [\n          ...prevPersonajes,\n          {\n            id: data.id,\n            nombre: data.name,\n            estado: data.status,\n            especie: data.species,\n            genero: data.gender,\n            origen: data.origin.name,\n            imagen: data.image,\n          },\n        ])\n    } catch (error) {\n      window.alert('¡No hay personajes con este ID!');\n    }\n  }\n\n  \n  \n\n  function eliminar(id){\n    const nuevoPersonaje = personajes.filter((personaje) => personaje.id !== id);\n    setPersonajes(nuevoPersonaje);\n  }\n  \n\n  return (\n    <div className=\"Fondo\">\n        <Navegador buscador={buscador}/>\n        <Routes>\n          <Route path=\"/\" element={<Cards personajes={personajes} eliminar={eliminar}/>}/>\n        </Routes>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAC1C,SAASC,KAAK,EAAEC,MAAM,QAAO,kBAAkB;AAC/C,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,KAAK,MAAM,2BAA2B;AAC7C,OAAOC,SAAS,MAAM,mCAAmC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAI1D,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,IAAIa,QAAQ,GAAG,CAAC;EAEhBZ,SAAS,CAAC,MAAM;IACd;IACAa,OAAO,CAACC,GAAG,CAAC,uCAAuC,EAAEJ,UAAU,CAAC;EAClE,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhB,eAAeK,QAAQA,CAACC,EAAE,EAAE;IAC1B,IAAI;MACF,MAAM;QAAEC;MAAK,CAAC,GAAG,MAAMnB,KAAK,CAAE,6CAA4CkB,EAAG,EAAC,CAAC;MAE/E,MAAME,mBAAmB,GAAGR,UAAU,CAACS,IAAI,CAAEC,SAAS,IAAKA,SAAS,CAACJ,EAAE,KAAKA,EAAE,CAAC;MAG/E,IAAIE,mBAAmB,EAAE;QACvB,OAAOG,MAAM,CAACC,KAAK,CAAC,+BAA+B,CAAC;MACtD;MAEEX,aAAa,CAAEY,cAAc,IAAK,CAChC,GAAGA,cAAc,EACjB;QACEP,EAAE,EAAEC,IAAI,CAACD,EAAE;QACXQ,MAAM,EAAEP,IAAI,CAACQ,IAAI;QACjBC,MAAM,EAAET,IAAI,CAACU,MAAM;QACnBC,OAAO,EAAEX,IAAI,CAACY,OAAO;QACrBC,MAAM,EAAEb,IAAI,CAACc,MAAM;QACnBC,MAAM,EAAEf,IAAI,CAACgB,MAAM,CAACR,IAAI;QACxBS,MAAM,EAAEjB,IAAI,CAACkB;MACf,CAAC,CACF,CAAC;IACN,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdf,MAAM,CAACC,KAAK,CAAC,iCAAiC,CAAC;IACjD;EACF;EAKA,SAASe,QAAQA,CAACrB,EAAE,EAAC;IACnB,MAAMsB,cAAc,GAAG5B,UAAU,CAAC6B,MAAM,CAAEnB,SAAS,IAAKA,SAAS,CAACJ,EAAE,KAAKA,EAAE,CAAC;IAC5EL,aAAa,CAAC2B,cAAc,CAAC;EAC/B;EAGA,oBACE/B,OAAA;IAAKiC,SAAS,EAAC,OAAO;IAAAC,QAAA,gBAClBlC,OAAA,CAACF,SAAS;MAACU,QAAQ,EAAEA;IAAS;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAChCtC,OAAA,CAACL,MAAM;MAAAuC,QAAA,eACLlC,OAAA,CAACN,KAAK;QAAC6C,IAAI,EAAC,GAAG;QAACC,OAAO,eAAExC,OAAA,CAACH,KAAK;UAACM,UAAU,EAAEA,UAAW;UAAC2B,QAAQ,EAAEA;QAAS;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1E,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV;AAACpC,EAAA,CAvDQD,GAAG;AAAAwC,EAAA,GAAHxC,GAAG;AAyDZ,eAAeA,GAAG;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}