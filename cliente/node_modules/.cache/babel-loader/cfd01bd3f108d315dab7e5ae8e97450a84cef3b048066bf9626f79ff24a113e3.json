{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Blackmen\\\\Desktop\\\\RICK AND MORTY\\\\cliente\\\\src\\\\Componentes\\\\Cards\\\\Cards.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { useSelector } from \"react-redux\";\nimport Card from \"../Card/Card\";\nimport \"./Estilos/Cards.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Cards() {\n  _s();\n  const personaje = useSelector(state => state.personajes);\n  const [indice, setIndice] = useState(0);\n  const [renderizado, setRenderizado] = useState(0);\n  if (personaje.length <= 12) {\n    setIndice(0);\n    setRenderizado(personaje.length);\n  }\n  if (personaje.length > 12) {\n    setIndice(0);\n    setRenderizado(12);\n  }\n  const sumar = () => {\n    setIndice(indice + 12);\n    setRenderizado(renderizado + 12);\n  };\n  const restar = () => {\n    setIndice(indice - 12);\n    setRenderizado(renderizado - 12);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Cards\",\n      children: personaje.map(({\n        id,\n        nombre,\n        estado,\n        especie,\n        origen,\n        imagen,\n        genero\n      }, index) => {\n        const uniqueKey = `${id}_${index}`;\n        return /*#__PURE__*/_jsxDEV(Card, {\n          id: id,\n          nombre: nombre,\n          estado: estado,\n          especie: especie,\n          origen: origen,\n          imagen: imagen,\n          genero: genero\n        }, uniqueKey, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 24\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"paginado\",\n      children: [personaje.length > 12 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"menor\",\n        onClick: restar,\n        children: \" < \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 38\n      }, this), personaje.length > 12 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"mayor\",\n        onClick: sumar,\n        children: \" > \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_s(Cards, \"mbxp6OguFRcRr85Yje1KIkIca+A=\", false, function () {\n  return [useSelector];\n});\n_c = Cards;\nexport default Cards;\n\n// {personaje.map(({id,nombre,estado,especie,origen,imagen,genero},index)=>{\n//     const uniqueKey = `${id}_${index}`;\n//     return <Card \n//     id={id}\n//     key={uniqueKey}\n//     nombre={nombre} \n//     estado={estado} \n//     especie={especie} \n//     origen={origen} \n//     imagen={imagen}\n//     genero={genero}/>\n// })}\n\n// for (let i = 0; i < global; i++) {\n//     const uniqueKey = `${personaje[0][\"id\"]}_${i}`;\n//     return <Card \n//     id={personaje[i][\"id\"]}\n//     key={uniqueKey}\n//     nombre={personaje[i][\"nombre\"]} \n//     estado={personaje[i][\"estado\"]} \n//     especie={personaje[i][\"especie\"]} \n//     origen={personaje[i][\"origen\"]} \n//     imagen={personaje[i][\"imagen\"]}\n//     genero={personaje[i][\"genero\"]}/>\n\n// }\nvar _c;\n$RefreshReg$(_c, \"Cards\");","map":{"version":3,"names":["useState","useSelector","Card","jsxDEV","_jsxDEV","Cards","_s","personaje","state","personajes","indice","setIndice","renderizado","setRenderizado","length","sumar","restar","children","className","map","id","nombre","estado","especie","origen","imagen","genero","index","uniqueKey","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Blackmen/Desktop/RICK AND MORTY/cliente/src/Componentes/Cards/Cards.jsx"],"sourcesContent":["import { useState } from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport Card from \"../Card/Card\";\r\nimport \"./Estilos/Cards.css\"\r\n\r\nfunction Cards(){\r\n    const personaje = useSelector((state) => state.personajes);\r\n    const [indice, setIndice] = useState(0);\r\n    const [renderizado, setRenderizado] = useState(0);\r\n\r\n    if(personaje.length <= 12) {\r\n        setIndice(0)\r\n        setRenderizado(personaje.length)}\r\n\r\n    if(personaje.length > 12){\r\n        setIndice(0)\r\n        setRenderizado(12)\r\n    }\r\n\r\n    const sumar = ()=>{\r\n        setIndice(indice + 12)\r\n        setRenderizado(renderizado + 12)\r\n    }\r\n\r\n    const restar = ()=>{\r\n        setIndice(indice - 12)\r\n        setRenderizado(renderizado - 12)\r\n    }\r\n\r\nreturn(\r\n    <div>\r\n        <div className=\"Cards\">\r\n            {personaje.map(({id,nombre,estado,especie,origen,imagen,genero},index)=>{\r\n                const uniqueKey = `${id}_${index}`;\r\n                return <Card \r\n                id={id}\r\n                key={uniqueKey}\r\n                nombre={nombre} \r\n                estado={estado} \r\n                especie={especie} \r\n                origen={origen} \r\n                imagen={imagen}\r\n                genero={genero}/>\r\n            })}\r\n        </div>\r\n        <div className=\"paginado\">\r\n            {personaje.length >12 && <button className=\"menor\" onClick={restar}> &lt; </button>}\r\n            {personaje.length > 12 && <button className=\"mayor\" onClick={sumar}> &gt; </button>}\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Cards;\r\n\r\n\r\n// {personaje.map(({id,nombre,estado,especie,origen,imagen,genero},index)=>{\r\n//     const uniqueKey = `${id}_${index}`;\r\n//     return <Card \r\n//     id={id}\r\n//     key={uniqueKey}\r\n//     nombre={nombre} \r\n//     estado={estado} \r\n//     especie={especie} \r\n//     origen={origen} \r\n//     imagen={imagen}\r\n//     genero={genero}/>\r\n// })}\r\n\r\n\r\n// for (let i = 0; i < global; i++) {\r\n//     const uniqueKey = `${personaje[0][\"id\"]}_${i}`;\r\n//     return <Card \r\n//     id={personaje[i][\"id\"]}\r\n//     key={uniqueKey}\r\n//     nombre={personaje[i][\"nombre\"]} \r\n//     estado={personaje[i][\"estado\"]} \r\n//     especie={personaje[i][\"especie\"]} \r\n//     origen={personaje[i][\"origen\"]} \r\n//     imagen={personaje[i][\"imagen\"]}\r\n//     genero={personaje[i][\"genero\"]}/>\r\n    \r\n// }\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}